<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAbEgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAEeJJ
        REFUeNrtnXmUVNWdgL/e61Wv9ELTXc0ia4tipKMhiHYUHSEJyXHOoNFBE8SFxJMFJRPPEI2OSzDOxImT
        8QSixyQdw+QokpkIGqJJxAVEgYiyb+LSQHfT3fRCdVU31TV/VENtb6l69aot3vt9dWhOv1t933K/++59
        990lC8EYN24KqWHM0GcshSxkox1OLVdSV/WqKCiUUoMHD7XU4qGGYlwo5AHQSZZdTlUAUHBRyEhq8VCL
        Bw8eKnCjUKD6/aB9XHd2Hq89k8M91FCCC4UcZ10IZ+XxqqGbeuhfJW5cuByaCWwuQGw57hkqxxWn5XHn
        CKDgwj1Ujp9OcsnjNhYglMdLIiputdRQInncvgK4UHBHlOMeaqlCQZE8bk8BclFwUTpUTw/X1SWP21aA
        6DweSnLJ4zYW4HQej66rl6DgkkYqewpwOo/H1tUlj9tUgFAeD9fVQ/9CbW6Sx20pQCiPV8bU1SWP21aA
        XFwolMSU46WSx+0rgAsFhaqIm7pH8ridBcgZanOribip10oet7MAp/N4ZF1d8ritBcihjDJqIpK8dqjN
        TfK4IwSYwEomo+BCkcuSIJnbLSyY/Ck08DLlkqYJ4uP/OEZ2hh7dIN0c5zh7OEB3oncACEi6JoyLr2X4
        EQbp5wTvs4F1bGdQ62vhd2o13EihpKxtyCKXIsYzm7lU8hEd6l/L1JuYYB1jWcYa5qu/QBcBnME0fsGd
        uOMDpAhwCm4ayWJTbE1P7gDOwcVdfCP20VUEcBJF/IjZIoCT8bCE0sgN0sxrjgC7OZaxR5dNKTVUq9b7
        r2QevxMBUqWHH/B6BvdMzqOaq1jEBXEhCotYx4n4P2mglaB8Evy0c8lZoOkUnmNQ5dhnRd4sBHOcDfMD
        7GUJL8dtLecyEcApNLOc1ritM8ItPiKA3dnMq3Hb6sKv/EUAu9PHO3HbKsLznogA9uco/pgt7nBbgAhg
        f/xxvQGywz07RQCHIwKIAIIIIIgAggggiACCCCCIAIIIIIgAggggiACCCCCIAIIIIIgAggggiACCCCCI
        AIIIIIgAggggiACCCCCIAIIIIIgAggggiACCCCCIAIIIIIgAggggiACCCCCIAEKmIdPFp4sCRlCRhusb
        pJd2ukSAzKaBO5hJRRrmFM/CxwGeZZXRmqAiwKdHIyupT2P8o7mEepbhTT0qqQNYzwiWpTX5AQq4lXlW
        RCQCWM9UPjcMeylkDnkiQCYyYZgW4JxIkQiQiSjDtJiU24r9iAAORwQQAQQRQBABBBFAEAEEEUBIlV5O
        Dct+eqzYjwhgPfvpGZb97LFiPyKA9exWWazVejp4gYAIkIn08BAb07yPE/wHr1gRkfQHSAfbuYmFzKRO
        tbU+l9EJXvceWgjGbe1iN6tZz4AIkLkc4j6Kcav0CBrEw1pqEoplPd/HHxfHAD1xqwGLABlHkG6NTls5
        CZfdXo5Yk8+1kTrA8JP4Nc9KQ59CEUAQAYQz2LUO4MdHP/2cIkiQHFzk48IlCW53Abo4zC72cYBjtNPJ
        AEEghzIqGclE6pnKOYyQhM8kAfrp49TQ8242+RSY6u3azRb+xkZ20oUvLvTjof8LKOFcGrmCiymW5P80
        BejgEB/SzBGOcOTMA1MulYykirGcxwQqyU8oriOsYw1vccLwm37aaOM1nmAWNzCHChFguBmkle1s4HX2
        0otPpaULIIcSRjGDLzPXoPNzB3/gKbYm+bzcyVpeYRbf5Wpn1wySE8BLDwEG6MNLH3148TKCKxLMp+Dj
        HZ5nAwcN32MF6KST3WzgAibryPQGy/kr/abO3cdf2MK1/IvOHkSAKFbxU/rxEyBAgFME6OcKPp+QAAHe
        5Cn+RFtSexxNlWZYN7/gvziS0vl38RTv8m/MdeoDcXICHGFP3LYBjZt4NIdZwW84lvTxNVCmEdLMfTRZ
        0lC6hUU8wCJnNosnd9LqucSouXKQl7mft0wcXT7TNWLfzxJetOwqtHA3Pr5lxVg7ewtgBh8recRE3gco
        50LV7Qf5DustPcoT3EsBt6e/7T3TSHfJ18tylplMfpjIaJWtR7nT4uQH6OZ+/ih3AGvp42H+M4V31w2U
        xm3z8jBrDf4unxrqGEslXtpp40BCCh5jGeOZJgJYxQA/5/EEkz8PGIx5T57HdJU71K94WrfaWcalzKeR
        MhQKCNCPn0OsZx1bDB8Xd/EIK5zVQphOAZ5nOX263yjmHKZRw0jKyWIAHy00s5/9tBOkTKUGsJXHdOOc
        xQ+5LKLpKJdc3HyWz3IrTfyMZoNjXsPl3CYCWMEOHtJpms3ifL5CIxdQTkFUSD89HGAjr5HLmJi/6uWn
        HNKMs4Cvs4xxGqEjWcpF3MObukftYwVz4vbrCBpoJWjweVDl767ghMo3e7lRZ18TeZCDBvs6STuBmG2r
        dZqFc7iLHsMzeI+LDa5DNssNYwnSzizTV7qOjxPYQ5AgTQm3seoxH29MvK00hE83PbzE/2rm/Xms5h7G
        G8Tgpjzm6Dp5kl7N71/LsgSmTJnGYwYNv4Os4iPn5Pv0CHCcJzSSKp/b+SWfMRXrK7yuGXYRDyb4Zu9S
        7sGt+409/FkESI31mu1+N/Fogl2iY+ljtea8eC7uYGLCMf0jX9QNH+APwzS4y6YC9PB7lS4ZAI3cS4nJ
        WN9ng2bY5VyTRExFfJuRut/Ywl4RwDx/1xgYVcMDjDUd6yu0aIQo3JxkJ69LmKMb3sYbIoB5/kqH6vZr
        Uqg59+iU/5O4NMnY8vmSbjeQIG8YtGCIAJp08jfV7SNZkEKrw2G2a4bNZlTS8c0yqDPs0JBYBDDkQ5U+
        AwBXcVEKsb6vmSBFXGniLGoN7hqtOg1OIoAuO1Xnss+hMabFL9lYtd4pVHCeifhyuED33HucUg20XoAd
        qkk1Itz2ZAKvxl0FYDzlpuKs133pc+pMR3IRICl8HNZIpnNSiLWPTzTDJpucMnmCQcPR0WGa6cdmAvRp
        vG+rN/38H7oDtGqGnWNyyuRiPLrhLdaNwXeWAEdVt5en9Fqjg5MaITmanUaNyDNQ8qTcAczlVfWkKk0p
        Vu0J0XJNz82fa9Dxw2fFFExOvAME0iCAj0HNZDS7aIKRAH7NfYoASeebHJSUYu3XTIxs0wO7sgzqDrnO
        GCpi/UmqdawOpLi+lUvzOAc1XjsZE9CsV4RQRAAzlGo093anGKvWkI1Tpl/cntLpXBKSbngWfrGZAIUa
        N/vUBCjTEaA3TQIUO2OomNUC5Gs8XB01fasGcGvW9QMJzAmgTr/B655qZwwbt1qAXI36/k7TCQWQp/MU
        8YHJ5/U2g3HFNc4YJma1AAVUqm7/hIMpxJqv02xrds7sfbrFUj61Tkh+6wVwM1V1exdbU4i1mHN17gDt
        JgXQewooYpIIYI4LVauBg6xNoRDIYrpmU3K7TlcRbfxs0w2vSenllaMFmKZxu97EaylppdXrr48/m6gF
        HDKY0H2q6XcMjhdgFFNUt/fyjOlHNhjNBM2wV028u/+LwSjBi1Nsu3SwACXM0AhZxyrTsZYxXTPsg6SX
        TujmRd1XPVV8wRnJn55ewV+hWnW7l0d52/RxNmo+lw/wtOGo32heMiiOPkO9CGCe6VytEXKQu9lpMtbL
        NJ4vAN7mt0nEdIz/1n0CyObLKXVfcbwABdygeQFf5RY2mYq1hq9qhg3yy4RX6RnkVwYTVk1inlOSP11j
        A2fpdLrezM08aarX/bU6FcEP+D67Eorlf3jM4KnhGp39iAAJUcLtOo9Re/kO17OGVp0uFwMc44OYitq5
        fE1nn5tYyn7DI1vLv3Jc9xsTudFJc4Wl643XXBbwhGaon5fZSD2XchlTKcNFAVkECeCnjw95l21sYQzP
        RGmUxUJe4H3NWP/ETdzHHE2pe2niJwaPjNks4nznJH/6BCjgTs1BoiFOspWtPEkxpVRTSQ4BfLTRRjdd
        DAKdtMfcRyaxhG/rjNrbzEJu4Xrq49oNT7KTn7Pa8J3kTL7upORP5xxBE/gxCzVGCYTx4qWFfaph3RyK
        K42v4zV+oxNfK4/wW2ZzJeOppYgAvRzn76znLZ2u5acZxY8MOouLAEnwBf6dJUk+oUfSy37+IWZbEfey
        X/fOEuQTmvg9hRRSho+T+OlKqIdvAUu5ahiueeKdTYMJzcOcsQLAfGCp6Rl3BlUrdRNYzm0a94ww/fTT
        qTOeKJ4cFvNNCyvF2ZRoLBxZm3Bns0LqNBaOtGzwerq7Pc2njLsN3rxps59elW7fjfyMOwwLl2ST6xvc
        b7qLeTyTuYXPU0euSh7ONZifJMxcLo75+yygi708ywsp9bFSwdpp4iI/O/hnk69WptCsEecLli7ykM+3
        Ejj7xKeJa2BzUrEl/+nmvoTHWlk4TZxa6WVcTp3HSp5QnfbViOOaD23zeJqZFiV/GT/kJzoLUyRLCffw
        uTTfWYtZYjDNTYIkVwQ0sAA/fREfPxUJJGwRN3Mlz/EMu5MactnNXs13i7No4lFWGfTuN+ZClnGNpSsF
        nEsj6aeMebyU+vjF5AT4ElcPLRdz+uNLeHTeGJZyPa+ylk20JFR+ZVOl2yY3kcdp5HG2mR7EVcW1fM/y
        FYMmWViX0GMyRSl1tTUhQHaKU5d6WMA/8THbeJvdHKQdP/1Ri87kkU8+bsZRz4U0GvTMU7iRy1lFE3uT
        zguVzOE2ZloyGWs0hcM0oqDIiv0M/+AHF5OYxHX00kMzLXTQeaZYyKWMCsoZRQUlCR5bHT/gOtazhm20
        J/TcXMh4vshXaXBKr5/MEiBEFsUUW9b1ehyLuYHdvMkmdtFKr0oRk0shpUxgBjNpwOO8xWEySwDrKWEG
        M+jjBM0c4BgddNDHIEHyKKOckYxnHOUpDlQXATIcBYWaoQnpQiuQBMl25oJwzhQgkmynLgaZ3EUSRABB
        BBCswztM00tZMo+ZCGA9B1MYAZUMB6zYjwhgPbtMrZOcLL1WvAkQAdLBCR5mR5r34WOFNYtnyxNyOtjI
        Ar7JTKrT0N6YhZd9PMuz1vQKEgHSw3t8jxGUpmWmMS+d1i1qJQKkiwFaE+iH/KkjdQCHIwKIAIIIIIgA
        ggggiACCCCCIAIIIIIgAggggiACCCCCIAIIIIIgAggggiACCCCCIAIIIIIgAggggiACCCCCIAIIIIIgA
        ggggiACCCCCIAIIIIIgAggggiACCCCCIAIIIIIgAggggiADCMJETN2V1MDzRvAhgf0bErYzcT7cI4BSy
        OT9uzvJOvCKAUxjP7LhtreE13EUAe5PPYurjtm4PFwGyXoCdcXEHi+OqgF5eDy+yLQKYJZDhx6cwhcXc
        RGFcyGG2hH8RAczh5lZmZezRZVPGFGZQpxIW5DmaRYBUcXHLWXrkO2gKFwBSCXQaflZyKHKDCOAkgvya
        puhNIoCTeJEHYhecEwGck/v/yF0cid0slUBn4OVpHqIlPkAEsD+neIcVrA63/4sAzqGdnTzPcxzV+kKk
        AFkOuCBWEeBj+jP2ig3SRRtt7OIN9tCp99XciD86laGnk4n08F02p2VpaCsIMoAfPwPGXw0L8CF3Mx4P
        HuqoREGhQNJZJ4+1nw1LQycjQCdNQC4KCmV4qMMzpEM1RSgokupR2KTAjK0EnqKHHlrZN3SSCgrFjKLu
        jBC1lKKgZOztT0hJgGiCePHSzuGh310ouKkakiH0swIFhXy5lHYUIBYfPjpp5l0A8lBQGDGkQkiHagpR
        cMmFtacA0QwwQDct7AEgGwWFEmoi7g+1FKOgSIOzPQWIZpCTnOT4mZeNCi4KqY66P4xAQYnrpCzYQoBY
        +uijk0/YCkA+CgoVZ1Sow0MVhbikuLCrANH0008Xx9gJQA4KCqXURggxaqi4kPZIWwoQTYBeemnjwNDv
        blwUMSpCh1rKUFDkXYU9BYjFi5cOPhr6rQAFhaqIR01pm7S5ANH48XOCo7w3dISn2yZPt0xK26TNBYhG
        u20y/LApbZM2FiAa/bbJkBDSNmljAWLRa5sM/ZS2SVsLEI1+26SHOmookbZJ+woQTWzbpAslom0y9NPx
        bZNOes4OFRdabZMe6qjC7bTiwrkNLdI26XABooltm1RQKIooLjxn2iZDTxe2kUIEUKePPjr4iHcAKKAQ
        N9WMYSxjGcs4CiNH2J7N/D8cuHEkb4+pbwAAAABJRU5ErkJggg==
</value>
  </data>
</root>